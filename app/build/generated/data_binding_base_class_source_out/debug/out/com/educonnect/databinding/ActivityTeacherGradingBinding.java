// Generated by view binder compiler. Do not edit!
package com.educonnect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.educonnect.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTeacherGradingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ListView listViewAssignments;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Spinner spinnerClass;

  @NonNull
  public final TextView tvAssignmentsLabel;

  @NonNull
  public final TextView tvClassLabel;

  @NonNull
  public final TextView tvNoAssignments;

  @NonNull
  public final TextView tvTitle;

  private ActivityTeacherGradingBinding(@NonNull ConstraintLayout rootView,
      @NonNull ListView listViewAssignments, @NonNull ProgressBar progressBar,
      @NonNull Spinner spinnerClass, @NonNull TextView tvAssignmentsLabel,
      @NonNull TextView tvClassLabel, @NonNull TextView tvNoAssignments,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.listViewAssignments = listViewAssignments;
    this.progressBar = progressBar;
    this.spinnerClass = spinnerClass;
    this.tvAssignmentsLabel = tvAssignmentsLabel;
    this.tvClassLabel = tvClassLabel;
    this.tvNoAssignments = tvNoAssignments;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTeacherGradingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTeacherGradingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_teacher_grading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTeacherGradingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.listViewAssignments;
      ListView listViewAssignments = ViewBindings.findChildViewById(rootView, id);
      if (listViewAssignments == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.spinnerClass;
      Spinner spinnerClass = ViewBindings.findChildViewById(rootView, id);
      if (spinnerClass == null) {
        break missingId;
      }

      id = R.id.tvAssignmentsLabel;
      TextView tvAssignmentsLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvAssignmentsLabel == null) {
        break missingId;
      }

      id = R.id.tvClassLabel;
      TextView tvClassLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvClassLabel == null) {
        break missingId;
      }

      id = R.id.tvNoAssignments;
      TextView tvNoAssignments = ViewBindings.findChildViewById(rootView, id);
      if (tvNoAssignments == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityTeacherGradingBinding((ConstraintLayout) rootView, listViewAssignments,
          progressBar, spinnerClass, tvAssignmentsLabel, tvClassLabel, tvNoAssignments, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
