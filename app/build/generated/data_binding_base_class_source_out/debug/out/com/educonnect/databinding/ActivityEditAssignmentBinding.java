// Generated by view binder compiler. Do not edit!
package com.educonnect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.educonnect.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditAssignmentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnSelectDate;

  @NonNull
  public final Button btnSelectFile;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final EditText etDescription;

  @NonNull
  public final EditText etTitle;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Spinner spinnerClass;

  @NonNull
  public final TextView tvClassLabel;

  @NonNull
  public final TextView tvDeadline;

  @NonNull
  public final TextView tvDeadlineLabel;

  @NonNull
  public final TextView tvDescriptionLabel;

  @NonNull
  public final TextView tvFileLabel;

  @NonNull
  public final TextView tvSelectedFile;

  @NonNull
  public final TextView tvTitleLabel;

  private ActivityEditAssignmentBinding(@NonNull ScrollView rootView, @NonNull Button btnSelectDate,
      @NonNull Button btnSelectFile, @NonNull Button btnUpdate, @NonNull EditText etDescription,
      @NonNull EditText etTitle, @NonNull ProgressBar progressBar, @NonNull Spinner spinnerClass,
      @NonNull TextView tvClassLabel, @NonNull TextView tvDeadline,
      @NonNull TextView tvDeadlineLabel, @NonNull TextView tvDescriptionLabel,
      @NonNull TextView tvFileLabel, @NonNull TextView tvSelectedFile,
      @NonNull TextView tvTitleLabel) {
    this.rootView = rootView;
    this.btnSelectDate = btnSelectDate;
    this.btnSelectFile = btnSelectFile;
    this.btnUpdate = btnUpdate;
    this.etDescription = etDescription;
    this.etTitle = etTitle;
    this.progressBar = progressBar;
    this.spinnerClass = spinnerClass;
    this.tvClassLabel = tvClassLabel;
    this.tvDeadline = tvDeadline;
    this.tvDeadlineLabel = tvDeadlineLabel;
    this.tvDescriptionLabel = tvDescriptionLabel;
    this.tvFileLabel = tvFileLabel;
    this.tvSelectedFile = tvSelectedFile;
    this.tvTitleLabel = tvTitleLabel;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditAssignmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditAssignmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_assignment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditAssignmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSelectDate;
      Button btnSelectDate = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectDate == null) {
        break missingId;
      }

      id = R.id.btnSelectFile;
      Button btnSelectFile = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectFile == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.etDescription;
      EditText etDescription = ViewBindings.findChildViewById(rootView, id);
      if (etDescription == null) {
        break missingId;
      }

      id = R.id.etTitle;
      EditText etTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTitle == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.spinnerClass;
      Spinner spinnerClass = ViewBindings.findChildViewById(rootView, id);
      if (spinnerClass == null) {
        break missingId;
      }

      id = R.id.tvClassLabel;
      TextView tvClassLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvClassLabel == null) {
        break missingId;
      }

      id = R.id.tvDeadline;
      TextView tvDeadline = ViewBindings.findChildViewById(rootView, id);
      if (tvDeadline == null) {
        break missingId;
      }

      id = R.id.tvDeadlineLabel;
      TextView tvDeadlineLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvDeadlineLabel == null) {
        break missingId;
      }

      id = R.id.tvDescriptionLabel;
      TextView tvDescriptionLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvDescriptionLabel == null) {
        break missingId;
      }

      id = R.id.tvFileLabel;
      TextView tvFileLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvFileLabel == null) {
        break missingId;
      }

      id = R.id.tvSelectedFile;
      TextView tvSelectedFile = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectedFile == null) {
        break missingId;
      }

      id = R.id.tvTitleLabel;
      TextView tvTitleLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleLabel == null) {
        break missingId;
      }

      return new ActivityEditAssignmentBinding((ScrollView) rootView, btnSelectDate, btnSelectFile,
          btnUpdate, etDescription, etTitle, progressBar, spinnerClass, tvClassLabel, tvDeadline,
          tvDeadlineLabel, tvDescriptionLabel, tvFileLabel, tvSelectedFile, tvTitleLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
